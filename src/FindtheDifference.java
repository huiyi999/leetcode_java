import java.util.*;

/**
 * Given two strings s and t which consist of only lowercase letters.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Find the letter that was added in t.
 */
public class FindtheDifference {
    public static char findTheDifference(String s, String t) {
        if (s.length() == 0)
            return t.charAt(0);
        List<Character> list = new ArrayList();
        for (int i = 0; i < t.length(); i++) {
            list.add(t.charAt(i));
        }
        for (int i = 0; i < s.length(); i++) {
            if (list.contains(s.charAt(i)))
                list.remove(Character.valueOf(s.charAt(i)));
        }
        return list.get(0);
    }

    /** Bit Mask **/
    public static char findTheDifference1(String s, String t) {
        char diff = t.charAt(t.length() - 1);

        for (int i = 0; i < s.length(); i++) {
            diff ^= s.charAt(i);
            diff ^= t.charAt(i);
        }

        return diff;
    }

    /** hashmap **/
    public char findTheDifference3(String s, String t) {
        // hashmap and bit munipulation
        HashMap<Character,Integer> map = new HashMap<Character,Integer>();
        int size_s = s.length();
        int size_z = size_s+1;
        int i = 0;
        for(i=0;i<size_s;i++){
            if(map.containsKey(s.charAt(i))){
                int count = map.get(s.charAt(i))+1;
                map.put(s.charAt(i),count);
            } else{
                map.put(s.charAt(i),1);
            }
        }
        for(i=0;i<size_z;i++){
            if(!map.containsKey(t.charAt(i)) || map.get(t.charAt(i))==0){
                break;
            } else {
                map.put(t.charAt(i),map.get(t.charAt(i))-1);
            }
        }
        return t.charAt(i);
    }

    public static void main(String[] args) {
        String s1 = "abcd";
        String t1 = "abcde";

        System.out.println(findTheDifference(s1, t1));   // Output: e
    }
}
